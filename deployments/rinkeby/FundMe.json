{
  "address": "0xC1872dbB160e94C7981Ae69f3584FAf18CB010E7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x981cfdef5138d8b1ca22f7053b6c017f13d9e0cf2de9949f58f9fe9b6b74292d",
  "receipt": {
    "to": null,
    "from": "0x3DEa5291F69606423e8e41A46DeFe871BC309aee",
    "contractAddress": "0xC1872dbB160e94C7981Ae69f3584FAf18CB010E7",
    "transactionIndex": 17,
    "gasUsed": "908863",
    "logsBloom": "0x
    "blockHash": "0xfd5c0eb54006c9ae33ef6cdca31143962787ba27e18b091114e5640325e25a5f",
    "transactionHash": "0x981cfdef5138d8b1ca22f7053b6c017f13d9e0cf2de9949f58f9fe9b6b74292d",
    "logs": [],
    "blockNumber": 10829868,
    "cumulativeGasUsed": "4054616",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8a753747a1fa494ec906ce90e9f37563a8af630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "e3f91f532e16363afb93dccc4874ea25",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private addressToAmountFunded;\\n    address[] private funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0x50014de13358193476e2c4a9a49bb49ae86c7877c5c2fc46f8aaa01e6b51ad09\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb08cacff685ac548200bfc09092c746b3ed461289fdda7f570ec61a02f35dc87\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051620010773803806200107783398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610f0f620001686000396000818161035601526105cb0152610f0f6000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063d7b4750c146101955761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063741bef1a1461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610847565b61030c565b6040516100cc919061088d565b60405180910390f35b6100dd610354565b005b3480156100eb57600080fd5b506100f4610594565b604051610101919061088d565b60405180910390f35b34801561011657600080fd5b5061011f6105a1565b60405161012c9190610907565b60405180910390f35b34801561014157600080fd5b5061014a6105c7565b6040516101579190610931565b60405180910390f35b34801561016c57600080fd5b506101756105ef565b6040516101829190610907565b60405180910390f35b6101936101d2565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190610978565b610619565b6040516101c99190610931565b60405180910390f35b6802b5e3af16b1880000610211600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066190919063ffffffff16565b1015610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610a02565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102a09190610a51565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d9576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610484576000600182815481106103ff576103fe610aa7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047c90610ad6565b9150506103dc565b50600067ffffffffffffffff8111156104a05761049f610b1f565b5b6040519080825280602002602001820160405280156104ce5781602001602082028036833780820191505090505b50600190805190602001906104e492919061073d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050b90610b7f565b60006040518083038185875af1925050503d8060008114610548576040519150601f19603f3d011682016040523d82523d6000602084013e61054d565b606091505b5050905080610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890610be0565b60405180910390fd5b50565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061062f5761062e610aa7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061066d8361069d565b90506000670de0b6b3a764000085836106869190610c00565b6106909190610c89565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106e657600080fd5b505afa1580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e9190610d47565b5050509150506402540be400816107359190610dc2565b915050919050565b8280548282559060005260206000209081019282156107b6579160200282015b828111156107b55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061075d565b5b5090506107c391906107c7565b5090565b5b808211156107e05760008160009055506001016107c8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610814826107e9565b9050919050565b61082481610809565b811461082f57600080fd5b50565b6000813590506108418161081b565b92915050565b60006020828403121561085d5761085c6107e4565b5b600061086b84828501610832565b91505092915050565b6000819050919050565b61088781610874565b82525050565b60006020820190506108a2600083018461087e565b92915050565b6000819050919050565b60006108cd6108c86108c3846107e9565b6108a8565b6107e9565b9050919050565b60006108df826108b2565b9050919050565b60006108f1826108d4565b9050919050565b610901816108e6565b82525050565b600060208201905061091c60008301846108f8565b92915050565b61092b81610809565b82525050565b60006020820190506109466000830184610922565b92915050565b61095581610874565b811461096057600080fd5b50565b6000813590506109728161094c565b92915050565b60006020828403121561098e5761098d6107e4565b5b600061099c84828501610963565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109ec601b836109a5565b91506109f7826109b6565b602082019050919050565b60006020820190508181036000830152610a1b816109df565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5c82610874565b9150610a6783610874565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a9c57610a9b610a22565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ae182610874565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b1457610b13610a22565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b69600083610b4e565b9150610b7482610b59565b600082019050919050565b6000610b8a82610b5c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bca600b836109a5565b9150610bd582610b94565b602082019050919050565b60006020820190508181036000830152610bf981610bbd565b9050919050565b6000610c0b82610874565b9150610c1683610874565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c4f57610c4e610a22565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c9482610874565b9150610c9f83610874565b925082610caf57610cae610c5a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cd981610cba565b8114610ce457600080fd5b50565b600081519050610cf681610cd0565b92915050565b6000819050919050565b610d0f81610cfc565b8114610d1a57600080fd5b50565b600081519050610d2c81610d06565b92915050565b600081519050610d418161094c565b92915050565b600080600080600060a08688031215610d6357610d626107e4565b5b6000610d7188828901610ce7565b9550506020610d8288828901610d1d565b9450506040610d9388828901610d32565b9350506060610da488828901610d32565b9250506080610db588828901610ce7565b9150509295509295909350565b6000610dcd82610cfc565b9150610dd883610cfc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e1757610e16610a22565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e5457610e53610a22565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e9157610e90610a22565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ece57610ecd610a22565b5b82820290509291505056fea2646970667358221220dec20ddf9d9cd51dcff1dc96a9c516e95b3f6e911961ae88b1b9339bced0d3fb64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063d7b4750c146101955761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063741bef1a1461010a5761008e565b3661008e5761008c6101d2565b005b6100966101d2565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610847565b61030c565b6040516100cc919061088d565b60405180910390f35b6100dd610354565b005b3480156100eb57600080fd5b506100f4610594565b604051610101919061088d565b60405180910390f35b34801561011657600080fd5b5061011f6105a1565b60405161012c9190610907565b60405180910390f35b34801561014157600080fd5b5061014a6105c7565b6040516101579190610931565b60405180910390f35b34801561016c57600080fd5b506101756105ef565b6040516101829190610907565b60405180910390f35b6101936101d2565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190610978565b610619565b6040516101c99190610931565b60405180910390f35b6802b5e3af16b1880000610211600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066190919063ffffffff16565b1015610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610a02565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102a09190610a51565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d9576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610484576000600182815481106103ff576103fe610aa7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047c90610ad6565b9150506103dc565b50600067ffffffffffffffff8111156104a05761049f610b1f565b5b6040519080825280602002602001820160405280156104ce5781602001602082028036833780820191505090505b50600190805190602001906104e492919061073d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050b90610b7f565b60006040518083038185875af1925050503d8060008114610548576040519150601f19603f3d011682016040523d82523d6000602084013e61054d565b606091505b5050905080610591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058890610be0565b60405180910390fd5b50565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061062f5761062e610aa7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061066d8361069d565b90506000670de0b6b3a764000085836106869190610c00565b6106909190610c89565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106e657600080fd5b505afa1580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e9190610d47565b5050509150506402540be400816107359190610dc2565b915050919050565b8280548282559060005260206000209081019282156107b6579160200282015b828111156107b55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061075d565b5b5090506107c391906107c7565b5090565b5b808211156107e05760008160009055506001016107c8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610814826107e9565b9050919050565b61082481610809565b811461082f57600080fd5b50565b6000813590506108418161081b565b92915050565b60006020828403121561085d5761085c6107e4565b5b600061086b84828501610832565b91505092915050565b6000819050919050565b61088781610874565b82525050565b60006020820190506108a2600083018461087e565b92915050565b6000819050919050565b60006108cd6108c86108c3846107e9565b6108a8565b6107e9565b9050919050565b60006108df826108b2565b9050919050565b60006108f1826108d4565b9050919050565b610901816108e6565b82525050565b600060208201905061091c60008301846108f8565b92915050565b61092b81610809565b82525050565b60006020820190506109466000830184610922565b92915050565b61095581610874565b811461096057600080fd5b50565b6000813590506109728161094c565b92915050565b60006020828403121561098e5761098d6107e4565b5b600061099c84828501610963565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109ec601b836109a5565b91506109f7826109b6565b602082019050919050565b60006020820190508181036000830152610a1b816109df565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5c82610874565b9150610a6783610874565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a9c57610a9b610a22565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ae182610874565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b1457610b13610a22565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b69600083610b4e565b9150610b7482610b59565b600082019050919050565b6000610b8a82610b5c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bca600b836109a5565b9150610bd582610b94565b602082019050919050565b60006020820190508181036000830152610bf981610bbd565b9050919050565b6000610c0b82610874565b9150610c1683610874565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c4f57610c4e610a22565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c9482610874565b9150610c9f83610874565b925082610caf57610cae610c5a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cd981610cba565b8114610ce457600080fd5b50565b600081519050610cf681610cd0565b92915050565b6000819050919050565b610d0f81610cfc565b8114610d1a57600080fd5b50565b600081519050610d2c81610d06565b92915050565b600081519050610d418161094c565b92915050565b600080600080600060a08688031215610d6357610d626107e4565b5b6000610d7188828901610ce7565b9550506020610d8288828901610d1d565b9450506040610d9388828901610d32565b9350506060610da488828901610d32565b9250506080610db588828901610ce7565b9150509295509295909350565b6000610dcd82610cfc565b9150610dd883610cfc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e1757610e16610a22565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e5457610e53610a22565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e9157610e90610a22565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ece57610ecd610a22565b5b82820290509291505056fea2646970667358221220dec20ddf9d9cd51dcff1dc96a9c516e95b3f6e911961ae88b1b9339bced0d3fb64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}